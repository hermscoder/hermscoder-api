spring.main.banner-mode=off

main.profile.user.email=emersonrjr03@gmail.com

spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

logging.level.org.apache.http=DEBUG

#Google Cloud Secret Manager configuration
spring.cloud.gcp.secretmanager.enabled=false
spring.cloud.gcp.sql.enabled=false

#Banco local - Blog
spring.datasource.url= jdbc:postgresql://localhost:5432/blogfolio
spring.datasource.username=postgres
spring.datasource.password=18081990
spring.jpa.hibernate.ddl-auto=update

#Disabling cloud for dev profile
spring.cloud.bootstrap.enabled=false
spring.cloud.config.enabled=false

#Multipart max file size
spring.servlet.multipart.max-file-size=50MB


#EMAIL SENDING CONFIGURATIONS
default.email.sender=${SPRING_MAIL_USERNAME}

spring.mail.host=smtp.gmail.com
spring.mail.username=${SPRING_MAIL_USERNAME}
spring.mail.password=${SPRING_MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth = true
spring.mail.properties.mail.smtp.socketFactory.port = 465
spring.mail.properties.mail.smtp.socketFactory.class = javax.net.ssl.SSLSocketFactory
spring.mail.properties.mail.smtp.socketFactory.fallback = false
spring.mail.properties.mail.smtp.starttls.enable = true
spring.mail.properties.mail.smtp.ssl.enable = true

spring.thymeleaf.prefix=classpath:/templates/

spring.thymeleaf.suffix=.html

#LINKEDIN API
linkedin.api.client.id=${LINKEDIN_API_CLIENT_ID}
linkedin.api.client.secret=${LINKEDIN_API_CLIENT_SECRET}

#PEXELS API
pexels.api.key=${PEXELS_API_KEY}

#CLOUDINARY CREDENTIALS
cloud.cloudName=${CLOUDINARY_CLOUD_NAME}
cloud.apiKey=${CLOUDINARY_CLOUD_API_KEY}
cloud.apiSecret=${CLOUDINARY_CLOUD_API_SECRET}

# Actuator and Application Health
management.health.defaults.enabled=false
management.health.solr.enabled=true